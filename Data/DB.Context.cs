//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RMSDBEntities : DbContext
    {
        public RMSDBEntities()
            : base("name=RMSDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CashierTable> CashierTables { get; set; }
        public virtual DbSet<menuCategory> menuCategories { get; set; }
        public virtual DbSet<menuItem> menuItems { get; set; }
        public virtual DbSet<R_Tables> R_Tables { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<section> sections { get; set; }
        public virtual DbSet<UserTable> UserTables { get; set; }
        public virtual DbSet<Stock_Tbl> Stock_Tbl { get; set; }
        public virtual DbSet<POS_Tbl> POS_Tbl { get; set; }
        public virtual DbSet<SaleDetail> SaleDetails { get; set; }
        public virtual DbSet<Login_Tbl> Login_Tbl { get; set; }
        public virtual DbSet<Subcription_Tbl> Subcription_Tbl { get; set; }
    
        public virtual ObjectResult<GetTablesOnChangeing_Result> GetTablesOnChangeing(string ticketNo)
        {
            var ticketNoParameter = ticketNo != null ?
                new ObjectParameter("TicketNo", ticketNo) :
                new ObjectParameter("TicketNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTablesOnChangeing_Result>("GetTablesOnChangeing", ticketNoParameter);
        }
    }
}
